# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
}

"Node Interface"
interface Node {
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

type Directory implements Node {
  absolutePath: String!
  accessTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  changeTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  children: [Node!]!
  ctime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type DirectoryConnection {
  distinct(field: DirectoryFieldsEnum!): [String!]!
  edges: [DirectoryEdge!]!
  group(
    field: DirectoryFieldsEnum!
    limit: Int
    skip: Int
  ): [DirectoryGroupConnection!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

type DirectoryGroupConnection {
  edges: [DirectoryEdge!]!
  field: String!
  fieldValue: String
  nodes: [Directory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type File implements Node {
  absolutePath: String!
  accessTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  changeTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  childImageSharp: ImageSharp
  children: [Node!]!
  childrenMenuContactJson: [MenuContactJson]
  childrenMenuMainJson: [MenuMainJson]
  childrenMenuSocialJson: [MenuSocialJson]
  ctime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  "Copy file to static directory and return public url to it"
  publicURL: String
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type FileConnection {
  distinct(field: FileFieldsEnum!): [String!]!
  edges: [FileEdge!]!
  group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

type FileGroupConnection {
  edges: [FileEdge!]!
  field: String!
  fieldValue: String
  nodes: [File!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type GooglePlacesPlace implements Node {
  children: [Node!]!
  childrenGooglePlacesReview: [GooglePlacesReview]
  formatted_address: String
  geometry: GooglePlacesPlaceGeometry
  googlePlacesId: String
  icon: String
  id: ID!
  internal: Internal!
  name: String
  opening_hours: GooglePlacesPlaceOpening_hours
  parent: Node
  photos: [GooglePlacesPlacePhotos]
  place_id: String
  plus_code: GooglePlacesPlacePlus_code
  rating: Float
  types: [String]
  user_ratings_total: Int
}

type GooglePlacesPlaceConnection {
  distinct(field: GooglePlacesPlaceFieldsEnum!): [String!]!
  edges: [GooglePlacesPlaceEdge!]!
  group(
    field: GooglePlacesPlaceFieldsEnum!
    limit: Int
    skip: Int
  ): [GooglePlacesPlaceGroupConnection!]!
  nodes: [GooglePlacesPlace!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type GooglePlacesPlaceEdge {
  next: GooglePlacesPlace
  node: GooglePlacesPlace!
  previous: GooglePlacesPlace
}

type GooglePlacesPlaceGeometry {
  location: GooglePlacesPlaceGeometryLocation
  viewport: GooglePlacesPlaceGeometryViewport
}

type GooglePlacesPlaceGeometryLocation {
  lat: Float
  lng: Float
}

type GooglePlacesPlaceGeometryViewport {
  northeast: GooglePlacesPlaceGeometryViewportNortheast
  southwest: GooglePlacesPlaceGeometryViewportSouthwest
}

type GooglePlacesPlaceGeometryViewportNortheast {
  lat: Float
  lng: Float
}

type GooglePlacesPlaceGeometryViewportSouthwest {
  lat: Float
  lng: Float
}

type GooglePlacesPlaceGroupConnection {
  edges: [GooglePlacesPlaceEdge!]!
  field: String!
  fieldValue: String
  nodes: [GooglePlacesPlace!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type GooglePlacesPlaceOpening_hours {
  open_now: Boolean
  periods: [GooglePlacesPlaceOpening_hoursPeriods]
  weekday_text: [String]
}

type GooglePlacesPlaceOpening_hoursPeriods {
  close: GooglePlacesPlaceOpening_hoursPeriodsClose
  open: GooglePlacesPlaceOpening_hoursPeriodsOpen
}

type GooglePlacesPlaceOpening_hoursPeriodsClose {
  day: Int
  time(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
}

type GooglePlacesPlaceOpening_hoursPeriodsOpen {
  day: Int
  time(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
}

type GooglePlacesPlacePhotos {
  height: Int
  html_attributions: [String]
  photo_reference: String
  width: Int
}

type GooglePlacesPlacePlus_code {
  compound_code: String
  global_code: String
}

type GooglePlacesReview implements Node {
  author_name: String
  author_url: String
  children: [Node!]!
  googlePlacesId: Int
  id: ID!
  internal: Internal!
  language: String
  parent: Node
  profile_photo_url: String
  rating: Int
  relative_time_description: String
  text: String
  time: Int
}

type GooglePlacesReviewConnection {
  distinct(field: GooglePlacesReviewFieldsEnum!): [String!]!
  edges: [GooglePlacesReviewEdge!]!
  group(
    field: GooglePlacesReviewFieldsEnum!
    limit: Int
    skip: Int
  ): [GooglePlacesReviewGroupConnection!]!
  nodes: [GooglePlacesReview!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type GooglePlacesReviewEdge {
  next: GooglePlacesReview
  node: GooglePlacesReview!
  previous: GooglePlacesReview
}

type GooglePlacesReviewGroupConnection {
  edges: [GooglePlacesReviewEdge!]!
  field: String!
  fieldValue: String
  nodes: [GooglePlacesReview!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharp implements Node {
  children: [Node!]!
  fixed(
    background: String = "rgba(0,0,0,1)"
    base64Width: Int
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    height: Int
    jpegProgressive: Boolean = true
    jpegQuality: Int
    pngCompressionSpeed: Int = 4
    pngQuality: Int
    quality: Int
    rotate: Int = 0
    toFormat: ImageFormat = NO_CHANGE
    toFormatBase64: ImageFormat = NO_CHANGE
    traceSVG: Potrace
    trim: Float = 0.0
    webpQuality: Int
    width: Int
  ): ImageSharpFixed
  fluid(
    background: String = "rgba(0,0,0,1)"
    base64Width: Int
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    jpegQuality: Int
    maxHeight: Int
    maxWidth: Int
    pngCompressionSpeed: Int = 4
    pngQuality: Int
    quality: Int
    rotate: Int = 0
    sizes: String = ""
    "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
    srcSetBreakpoints: [Int] = []
    toFormat: ImageFormat = NO_CHANGE
    toFormatBase64: ImageFormat = NO_CHANGE
    traceSVG: Potrace
    trim: Float = 0.0
    webpQuality: Int
  ): ImageSharpFluid
  id: ID!
  internal: Internal!
  original: ImageSharpOriginal
  parent: Node
  resize(
    background: String = "rgba(0,0,0,1)"
    base64: Boolean = false
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    height: Int
    jpegProgressive: Boolean = true
    jpegQuality: Int
    pngCompressionLevel: Int = 9
    pngCompressionSpeed: Int = 4
    pngQuality: Int
    quality: Int
    rotate: Int = 0
    toFormat: ImageFormat = NO_CHANGE
    traceSVG: Potrace
    trim: Float = 0.0
    webpQuality: Int
    width: Int
  ): ImageSharpResize
  resolutions(
    background: String = "rgba(0,0,0,1)"
    base64Width: Int
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    height: Int
    jpegProgressive: Boolean = true
    jpegQuality: Int
    pngCompressionSpeed: Int = 4
    pngQuality: Int
    quality: Int
    rotate: Int = 0
    toFormat: ImageFormat = NO_CHANGE
    toFormatBase64: ImageFormat = NO_CHANGE
    traceSVG: Potrace
    trim: Float = 0.0
    webpQuality: Int
    width: Int
  ): ImageSharpResolutions
    @deprecated(
      reason: "Resolutions was deprecated in Gatsby v2. It's been renamed to \"fixed\" https://example.com/write-docs-and-fix-this-example-link"
    )
  sizes(
    background: String = "rgba(0,0,0,1)"
    base64Width: Int
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    jpegQuality: Int
    maxHeight: Int
    maxWidth: Int
    pngCompressionSpeed: Int = 4
    pngQuality: Int
    quality: Int
    rotate: Int = 0
    sizes: String = ""
    "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
    srcSetBreakpoints: [Int] = []
    toFormat: ImageFormat = NO_CHANGE
    toFormatBase64: ImageFormat = NO_CHANGE
    traceSVG: Potrace
    trim: Float = 0.0
    webpQuality: Int
  ): ImageSharpSizes
    @deprecated(
      reason: "Sizes was deprecated in Gatsby v2. It's been renamed to \"fluid\" https://example.com/write-docs-and-fix-this-example-link"
    )
}

type ImageSharpConnection {
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  edges: [ImageSharpEdge!]!
  group(
    field: ImageSharpFieldsEnum!
    limit: Int
    skip: Int
  ): [ImageSharpGroupConnection!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

type ImageSharpFixed {
  aspectRatio: Float
  base64: String
  height: Float!
  originalName: String
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
  width: Float!
}

type ImageSharpFluid {
  aspectRatio: Float!
  base64: String
  originalImg: String
  originalName: String
  presentationHeight: Int!
  presentationWidth: Int!
  sizes: String!
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
}

type ImageSharpGroupConnection {
  edges: [ImageSharpEdge!]!
  field: String!
  fieldValue: String
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharpOriginal {
  height: Float
  src: String
  width: Float
}

type ImageSharpResize {
  aspectRatio: Float
  height: Int
  originalName: String
  src: String
  tracedSVG: String
  width: Int
}

type ImageSharpResolutions {
  aspectRatio: Float
  base64: String
  height: Float!
  originalName: String
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
  width: Float!
}

type ImageSharpSizes {
  aspectRatio: Float!
  base64: String
  originalImg: String
  originalName: String
  presentationHeight: Int!
  presentationWidth: Int!
  sizes: String!
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

type MenuContactJson implements Node {
  children: [Node!]!
  cta: String
  graphic: String
  href: String
  id: ID!
  internal: Internal!
  parent: Node
  title: String
}

type MenuContactJsonConnection {
  distinct(field: MenuContactJsonFieldsEnum!): [String!]!
  edges: [MenuContactJsonEdge!]!
  group(
    field: MenuContactJsonFieldsEnum!
    limit: Int
    skip: Int
  ): [MenuContactJsonGroupConnection!]!
  nodes: [MenuContactJson!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type MenuContactJsonEdge {
  next: MenuContactJson
  node: MenuContactJson!
  previous: MenuContactJson
}

type MenuContactJsonGroupConnection {
  edges: [MenuContactJsonEdge!]!
  field: String!
  fieldValue: String
  nodes: [MenuContactJson!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type MenuMainJson implements Node {
  children: [Node!]!
  cta: String
  href: String
  id: ID!
  internal: Internal!
  parent: Node
  title: String
}

type MenuMainJsonConnection {
  distinct(field: MenuMainJsonFieldsEnum!): [String!]!
  edges: [MenuMainJsonEdge!]!
  group(
    field: MenuMainJsonFieldsEnum!
    limit: Int
    skip: Int
  ): [MenuMainJsonGroupConnection!]!
  nodes: [MenuMainJson!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type MenuMainJsonEdge {
  next: MenuMainJson
  node: MenuMainJson!
  previous: MenuMainJson
}

type MenuMainJsonGroupConnection {
  edges: [MenuMainJsonEdge!]!
  field: String!
  fieldValue: String
  nodes: [MenuMainJson!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type MenuSocialJson implements Node {
  children: [Node!]!
  graphic: String
  href: String
  id: ID!
  internal: Internal!
  parent: Node
  title: String
}

type MenuSocialJsonConnection {
  distinct(field: MenuSocialJsonFieldsEnum!): [String!]!
  edges: [MenuSocialJsonEdge!]!
  group(
    field: MenuSocialJsonFieldsEnum!
    limit: Int
    skip: Int
  ): [MenuSocialJsonGroupConnection!]!
  nodes: [MenuSocialJson!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type MenuSocialJsonEdge {
  next: MenuSocialJson
  node: MenuSocialJson!
  previous: MenuSocialJson
}

type MenuSocialJsonGroupConnection {
  edges: [MenuSocialJsonEdge!]!
  field: String!
  fieldValue: String
  nodes: [MenuSocialJson!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type PageInfo {
  currentPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

type Query {
  allDirectory(
    filter: DirectoryFilterInput
    limit: Int
    skip: Int
    sort: DirectorySortInput
  ): DirectoryConnection!
  allFile(
    filter: FileFilterInput
    limit: Int
    skip: Int
    sort: FileSortInput
  ): FileConnection!
  allGooglePlacesPlace(
    filter: GooglePlacesPlaceFilterInput
    limit: Int
    skip: Int
    sort: GooglePlacesPlaceSortInput
  ): GooglePlacesPlaceConnection!
  allGooglePlacesReview(
    filter: GooglePlacesReviewFilterInput
    limit: Int
    skip: Int
    sort: GooglePlacesReviewSortInput
  ): GooglePlacesReviewConnection!
  allImageSharp(
    filter: ImageSharpFilterInput
    limit: Int
    skip: Int
    sort: ImageSharpSortInput
  ): ImageSharpConnection!
  allMenuContactJson(
    filter: MenuContactJsonFilterInput
    limit: Int
    skip: Int
    sort: MenuContactJsonSortInput
  ): MenuContactJsonConnection!
  allMenuMainJson(
    filter: MenuMainJsonFilterInput
    limit: Int
    skip: Int
    sort: MenuMainJsonSortInput
  ): MenuMainJsonConnection!
  allMenuSocialJson(
    filter: MenuSocialJsonFilterInput
    limit: Int
    skip: Int
    sort: MenuSocialJsonSortInput
  ): MenuSocialJsonConnection!
  allSite(
    filter: SiteFilterInput
    limit: Int
    skip: Int
    sort: SiteSortInput
  ): SiteConnection!
  allSiteBuildMetadata(
    filter: SiteBuildMetadataFilterInput
    limit: Int
    skip: Int
    sort: SiteBuildMetadataSortInput
  ): SiteBuildMetadataConnection!
  allSitePage(
    filter: SitePageFilterInput
    limit: Int
    skip: Int
    sort: SitePageSortInput
  ): SitePageConnection!
  allSitePlugin(
    filter: SitePluginFilterInput
    limit: Int
    skip: Int
    sort: SitePluginSortInput
  ): SitePluginConnection!
  directory(
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
  ): Directory
  file(
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    childImageSharp: ImageSharpFilterInput
    children: NodeFilterListInput
    childrenMenuContactJson: MenuContactJsonFilterListInput
    childrenMenuMainJson: MenuMainJsonFilterListInput
    childrenMenuSocialJson: MenuSocialJsonFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    publicURL: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
  ): File
  googlePlacesPlace(
    children: NodeFilterListInput
    childrenGooglePlacesReview: GooglePlacesReviewFilterListInput
    formatted_address: StringQueryOperatorInput
    geometry: GooglePlacesPlaceGeometryFilterInput
    googlePlacesId: StringQueryOperatorInput
    icon: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    opening_hours: GooglePlacesPlaceOpening_hoursFilterInput
    parent: NodeFilterInput
    photos: GooglePlacesPlacePhotosFilterListInput
    place_id: StringQueryOperatorInput
    plus_code: GooglePlacesPlacePlus_codeFilterInput
    rating: FloatQueryOperatorInput
    types: StringQueryOperatorInput
    user_ratings_total: IntQueryOperatorInput
  ): GooglePlacesPlace
  googlePlacesReview(
    author_name: StringQueryOperatorInput
    author_url: StringQueryOperatorInput
    children: NodeFilterListInput
    googlePlacesId: IntQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    language: StringQueryOperatorInput
    parent: NodeFilterInput
    profile_photo_url: StringQueryOperatorInput
    rating: IntQueryOperatorInput
    relative_time_description: StringQueryOperatorInput
    text: StringQueryOperatorInput
    time: IntQueryOperatorInput
  ): GooglePlacesReview
  imageSharp(
    children: NodeFilterListInput
    fixed: ImageSharpFixedFilterInput
    fluid: ImageSharpFluidFilterInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    original: ImageSharpOriginalFilterInput
    parent: NodeFilterInput
    resize: ImageSharpResizeFilterInput
    resolutions: ImageSharpResolutionsFilterInput
    sizes: ImageSharpSizesFilterInput
  ): ImageSharp
  menuContactJson(
    children: NodeFilterListInput
    cta: StringQueryOperatorInput
    graphic: StringQueryOperatorInput
    href: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    title: StringQueryOperatorInput
  ): MenuContactJson
  menuMainJson(
    children: NodeFilterListInput
    cta: StringQueryOperatorInput
    href: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    title: StringQueryOperatorInput
  ): MenuMainJson
  menuSocialJson(
    children: NodeFilterListInput
    graphic: StringQueryOperatorInput
    href: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    title: StringQueryOperatorInput
  ): MenuSocialJson
  site(
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    host: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    pathPrefix: StringQueryOperatorInput
    polyfill: BooleanQueryOperatorInput
    port: IntQueryOperatorInput
    siteMetadata: SiteSiteMetadataFilterInput
  ): Site
  siteBuildMetadata(
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
  ): SiteBuildMetadata
  sitePage(
    children: NodeFilterListInput
    component: StringQueryOperatorInput
    componentChunkName: StringQueryOperatorInput
    componentPath: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    internalComponentName: StringQueryOperatorInput
    isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
    matchPath: StringQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    pluginCreator: SitePluginFilterInput
    pluginCreatorId: StringQueryOperatorInput
  ): SitePage
  sitePlugin(
    browserAPIs: StringQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    nodeAPIs: StringQueryOperatorInput
    packageJson: SitePluginPackageJsonFilterInput
    parent: NodeFilterInput
    pluginFilepath: StringQueryOperatorInput
    pluginOptions: SitePluginPluginOptionsFilterInput
    resolve: StringQueryOperatorInput
    ssrAPIs: StringQueryOperatorInput
    version: StringQueryOperatorInput
  ): SitePlugin
}

type Site implements Node {
  buildTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  host: String
  id: ID!
  internal: Internal!
  parent: Node
  pathPrefix: String
  polyfill: Boolean
  port: Int
  siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
  buildTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

type SiteBuildMetadataConnection {
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  edges: [SiteBuildMetadataEdge!]!
  group(
    field: SiteBuildMetadataFieldsEnum!
    limit: Int
    skip: Int
  ): [SiteBuildMetadataGroupConnection!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
  edges: [SiteBuildMetadataEdge!]!
  field: String!
  fieldValue: String
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SiteConnection {
  distinct(field: SiteFieldsEnum!): [String!]!
  edges: [SiteEdge!]!
  group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

type SiteGroupConnection {
  edges: [SiteEdge!]!
  field: String!
  fieldValue: String
  nodes: [Site!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePage implements Node {
  children: [Node!]!
  component: String!
  componentChunkName: String!
  componentPath: String
  id: ID!
  internal: Internal!
  internalComponentName: String!
  isCreatedByStatefulCreatePages: Boolean
  matchPath: String
  parent: Node
  path: String!
  pluginCreator: SitePlugin
  pluginCreatorId: String
}

type SitePageConnection {
  distinct(field: SitePageFieldsEnum!): [String!]!
  edges: [SitePageEdge!]!
  group(
    field: SitePageFieldsEnum!
    limit: Int
    skip: Int
  ): [SitePageGroupConnection!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

type SitePageGroupConnection {
  edges: [SitePageEdge!]!
  field: String!
  fieldValue: String
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePlugin implements Node {
  browserAPIs: [String]
  children: [Node!]!
  id: ID!
  internal: Internal!
  name: String
  nodeAPIs: [String]
  packageJson: SitePluginPackageJson
  parent: Node
  pluginFilepath: String
  pluginOptions: SitePluginPluginOptions
  resolve: String
  ssrAPIs: [String]
  version: String
}

type SitePluginConnection {
  distinct(field: SitePluginFieldsEnum!): [String!]!
  edges: [SitePluginEdge!]!
  group(
    field: SitePluginFieldsEnum!
    limit: Int
    skip: Int
  ): [SitePluginGroupConnection!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

type SitePluginGroupConnection {
  edges: [SitePluginEdge!]!
  field: String!
  fieldValue: String
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePluginPackageJson {
  dependencies: [SitePluginPackageJsonDependencies]
  description: String
  devDependencies: [SitePluginPackageJsonDevDependencies]
  keywords: [String]
  license: String
  main: String
  name: String
  peerDependencies: [SitePluginPackageJsonPeerDependencies]
  version: String
}

type SitePluginPackageJsonDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonDevDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonPeerDependencies {
  name: String
  version: String
}

type SitePluginPluginOptions {
  apiKey: String
  background_color: String
  cacheDigest: String
  cache_busting_mode: String
  cleanupOnClient: Boolean
  display: String
  icon: String
  include_favicon: Boolean
  legacy: Boolean
  name: String
  path: String
  pathCheck: Boolean
  pathToCreateStoreModule: String
  placeIds: [String]
  serialize: SitePluginPluginOptionsSerialize
  start_url: String
  theme_color: String
  theme_color_in_head: Boolean
  windowKey: String
}

type SitePluginPluginOptionsSerialize {
  isJSON: Boolean
  space: Int
  unsafe: Boolean
}

type SiteSiteMetadata {
  author: String
  description: String
  title: String
}

enum DirectoryFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum FileFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  childImageSharp___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___originalImg
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___presentationHeight
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___presentationWidth
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___sizes
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___original___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___original___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___original___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resolutions___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resolutions___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resolutions___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resolutions___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resolutions___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resolutions___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resolutions___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resolutions___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resolutions___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resolutions___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___sizes___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___sizes___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___sizes___originalImg
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___sizes___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___sizes___presentationHeight
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___sizes___presentationWidth
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___sizes___sizes
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___sizes___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___sizes___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___sizes___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___sizes___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___sizes___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children
  childrenMenuContactJson
  childrenMenuContactJson___children
  childrenMenuContactJson___children___children
  childrenMenuContactJson___children___children___children
  childrenMenuContactJson___children___children___id
  childrenMenuContactJson___children___id
  childrenMenuContactJson___children___internal___content
  childrenMenuContactJson___children___internal___contentDigest
  childrenMenuContactJson___children___internal___description
  childrenMenuContactJson___children___internal___fieldOwners
  childrenMenuContactJson___children___internal___ignoreType
  childrenMenuContactJson___children___internal___mediaType
  childrenMenuContactJson___children___internal___owner
  childrenMenuContactJson___children___internal___type
  childrenMenuContactJson___children___parent___children
  childrenMenuContactJson___children___parent___id
  childrenMenuContactJson___cta
  childrenMenuContactJson___graphic
  childrenMenuContactJson___href
  childrenMenuContactJson___id
  childrenMenuContactJson___internal___content
  childrenMenuContactJson___internal___contentDigest
  childrenMenuContactJson___internal___description
  childrenMenuContactJson___internal___fieldOwners
  childrenMenuContactJson___internal___ignoreType
  childrenMenuContactJson___internal___mediaType
  childrenMenuContactJson___internal___owner
  childrenMenuContactJson___internal___type
  childrenMenuContactJson___parent___children
  childrenMenuContactJson___parent___children___children
  childrenMenuContactJson___parent___children___id
  childrenMenuContactJson___parent___id
  childrenMenuContactJson___parent___internal___content
  childrenMenuContactJson___parent___internal___contentDigest
  childrenMenuContactJson___parent___internal___description
  childrenMenuContactJson___parent___internal___fieldOwners
  childrenMenuContactJson___parent___internal___ignoreType
  childrenMenuContactJson___parent___internal___mediaType
  childrenMenuContactJson___parent___internal___owner
  childrenMenuContactJson___parent___internal___type
  childrenMenuContactJson___parent___parent___children
  childrenMenuContactJson___parent___parent___id
  childrenMenuContactJson___title
  childrenMenuMainJson
  childrenMenuMainJson___children
  childrenMenuMainJson___children___children
  childrenMenuMainJson___children___children___children
  childrenMenuMainJson___children___children___id
  childrenMenuMainJson___children___id
  childrenMenuMainJson___children___internal___content
  childrenMenuMainJson___children___internal___contentDigest
  childrenMenuMainJson___children___internal___description
  childrenMenuMainJson___children___internal___fieldOwners
  childrenMenuMainJson___children___internal___ignoreType
  childrenMenuMainJson___children___internal___mediaType
  childrenMenuMainJson___children___internal___owner
  childrenMenuMainJson___children___internal___type
  childrenMenuMainJson___children___parent___children
  childrenMenuMainJson___children___parent___id
  childrenMenuMainJson___cta
  childrenMenuMainJson___href
  childrenMenuMainJson___id
  childrenMenuMainJson___internal___content
  childrenMenuMainJson___internal___contentDigest
  childrenMenuMainJson___internal___description
  childrenMenuMainJson___internal___fieldOwners
  childrenMenuMainJson___internal___ignoreType
  childrenMenuMainJson___internal___mediaType
  childrenMenuMainJson___internal___owner
  childrenMenuMainJson___internal___type
  childrenMenuMainJson___parent___children
  childrenMenuMainJson___parent___children___children
  childrenMenuMainJson___parent___children___id
  childrenMenuMainJson___parent___id
  childrenMenuMainJson___parent___internal___content
  childrenMenuMainJson___parent___internal___contentDigest
  childrenMenuMainJson___parent___internal___description
  childrenMenuMainJson___parent___internal___fieldOwners
  childrenMenuMainJson___parent___internal___ignoreType
  childrenMenuMainJson___parent___internal___mediaType
  childrenMenuMainJson___parent___internal___owner
  childrenMenuMainJson___parent___internal___type
  childrenMenuMainJson___parent___parent___children
  childrenMenuMainJson___parent___parent___id
  childrenMenuMainJson___title
  childrenMenuSocialJson
  childrenMenuSocialJson___children
  childrenMenuSocialJson___children___children
  childrenMenuSocialJson___children___children___children
  childrenMenuSocialJson___children___children___id
  childrenMenuSocialJson___children___id
  childrenMenuSocialJson___children___internal___content
  childrenMenuSocialJson___children___internal___contentDigest
  childrenMenuSocialJson___children___internal___description
  childrenMenuSocialJson___children___internal___fieldOwners
  childrenMenuSocialJson___children___internal___ignoreType
  childrenMenuSocialJson___children___internal___mediaType
  childrenMenuSocialJson___children___internal___owner
  childrenMenuSocialJson___children___internal___type
  childrenMenuSocialJson___children___parent___children
  childrenMenuSocialJson___children___parent___id
  childrenMenuSocialJson___graphic
  childrenMenuSocialJson___href
  childrenMenuSocialJson___id
  childrenMenuSocialJson___internal___content
  childrenMenuSocialJson___internal___contentDigest
  childrenMenuSocialJson___internal___description
  childrenMenuSocialJson___internal___fieldOwners
  childrenMenuSocialJson___internal___ignoreType
  childrenMenuSocialJson___internal___mediaType
  childrenMenuSocialJson___internal___owner
  childrenMenuSocialJson___internal___type
  childrenMenuSocialJson___parent___children
  childrenMenuSocialJson___parent___children___children
  childrenMenuSocialJson___parent___children___id
  childrenMenuSocialJson___parent___id
  childrenMenuSocialJson___parent___internal___content
  childrenMenuSocialJson___parent___internal___contentDigest
  childrenMenuSocialJson___parent___internal___description
  childrenMenuSocialJson___parent___internal___fieldOwners
  childrenMenuSocialJson___parent___internal___ignoreType
  childrenMenuSocialJson___parent___internal___mediaType
  childrenMenuSocialJson___parent___internal___owner
  childrenMenuSocialJson___parent___internal___type
  childrenMenuSocialJson___parent___parent___children
  childrenMenuSocialJson___parent___parent___id
  childrenMenuSocialJson___title
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  publicURL
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum GooglePlacesPlaceFieldsEnum {
  children
  childrenGooglePlacesReview
  childrenGooglePlacesReview___author_name
  childrenGooglePlacesReview___author_url
  childrenGooglePlacesReview___children
  childrenGooglePlacesReview___children___children
  childrenGooglePlacesReview___children___children___children
  childrenGooglePlacesReview___children___children___id
  childrenGooglePlacesReview___children___id
  childrenGooglePlacesReview___children___internal___content
  childrenGooglePlacesReview___children___internal___contentDigest
  childrenGooglePlacesReview___children___internal___description
  childrenGooglePlacesReview___children___internal___fieldOwners
  childrenGooglePlacesReview___children___internal___ignoreType
  childrenGooglePlacesReview___children___internal___mediaType
  childrenGooglePlacesReview___children___internal___owner
  childrenGooglePlacesReview___children___internal___type
  childrenGooglePlacesReview___children___parent___children
  childrenGooglePlacesReview___children___parent___id
  childrenGooglePlacesReview___googlePlacesId
  childrenGooglePlacesReview___id
  childrenGooglePlacesReview___internal___content
  childrenGooglePlacesReview___internal___contentDigest
  childrenGooglePlacesReview___internal___description
  childrenGooglePlacesReview___internal___fieldOwners
  childrenGooglePlacesReview___internal___ignoreType
  childrenGooglePlacesReview___internal___mediaType
  childrenGooglePlacesReview___internal___owner
  childrenGooglePlacesReview___internal___type
  childrenGooglePlacesReview___language
  childrenGooglePlacesReview___parent___children
  childrenGooglePlacesReview___parent___children___children
  childrenGooglePlacesReview___parent___children___id
  childrenGooglePlacesReview___parent___id
  childrenGooglePlacesReview___parent___internal___content
  childrenGooglePlacesReview___parent___internal___contentDigest
  childrenGooglePlacesReview___parent___internal___description
  childrenGooglePlacesReview___parent___internal___fieldOwners
  childrenGooglePlacesReview___parent___internal___ignoreType
  childrenGooglePlacesReview___parent___internal___mediaType
  childrenGooglePlacesReview___parent___internal___owner
  childrenGooglePlacesReview___parent___internal___type
  childrenGooglePlacesReview___parent___parent___children
  childrenGooglePlacesReview___parent___parent___id
  childrenGooglePlacesReview___profile_photo_url
  childrenGooglePlacesReview___rating
  childrenGooglePlacesReview___relative_time_description
  childrenGooglePlacesReview___text
  childrenGooglePlacesReview___time
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  formatted_address
  geometry___location___lat
  geometry___location___lng
  geometry___viewport___northeast___lat
  geometry___viewport___northeast___lng
  geometry___viewport___southwest___lat
  geometry___viewport___southwest___lng
  googlePlacesId
  icon
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  opening_hours___open_now
  opening_hours___periods
  opening_hours___periods___close___day
  opening_hours___periods___close___time
  opening_hours___periods___open___day
  opening_hours___periods___open___time
  opening_hours___weekday_text
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  photos
  photos___height
  photos___html_attributions
  photos___photo_reference
  photos___width
  place_id
  plus_code___compound_code
  plus_code___global_code
  rating
  types
  user_ratings_total
}

enum GooglePlacesReviewFieldsEnum {
  author_name
  author_url
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  googlePlacesId
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  language
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  profile_photo_url
  rating
  relative_time_description
  text
  time
}

enum ImageCropFocus {
  ATTENTION
  CENTER
  EAST
  ENTROPY
  NORTH
  NORTHEAST
  NORTHWEST
  SOUTH
  SOUTHEAST
  SOUTHWEST
  WEST
}

enum ImageFit {
  CONTAIN
  COVER
  FILL
  INSIDE
  OUTSIDE
}

enum ImageFormat {
  JPG
  NO_CHANGE
  PNG
  WEBP
}

enum ImageSharpFieldsEnum {
  children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___originalImg
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___presentationHeight
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___presentationWidth
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___sizes
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  original___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  original___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  original___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resolutions___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resolutions___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resolutions___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resolutions___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resolutions___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resolutions___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resolutions___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resolutions___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resolutions___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resolutions___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  sizes___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  sizes___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  sizes___originalImg
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  sizes___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  sizes___presentationHeight
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  sizes___presentationWidth
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  sizes___sizes
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  sizes___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  sizes___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  sizes___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  sizes___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  sizes___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
}

enum MenuContactJsonFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  cta
  graphic
  href
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  title
}

enum MenuMainJsonFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  cta
  href
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  title
}

enum MenuSocialJsonFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  graphic
  href
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  title
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_LEFT
  TURNPOLICY_MAJORITY
  TURNPOLICY_MINORITY
  TURNPOLICY_RIGHT
  TURNPOLICY_WHITE
}

enum SiteBuildMetadataFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

enum SiteFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  host
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pathPrefix
  polyfill
  port
  siteMetadata___author
  siteMetadata___description
  siteMetadata___title
}

enum SitePageFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  component
  componentChunkName
  componentPath
  id
  internalComponentName
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isCreatedByStatefulCreatePages
  matchPath
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  path
  pluginCreatorId
  pluginCreator___browserAPIs
  pluginCreator___children
  pluginCreator___children___children
  pluginCreator___children___children___children
  pluginCreator___children___children___id
  pluginCreator___children___id
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___children___parent___children
  pluginCreator___children___parent___id
  pluginCreator___id
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___name
  pluginCreator___nodeAPIs
  pluginCreator___packageJson___dependencies
  pluginCreator___packageJson___dependencies___name
  pluginCreator___packageJson___dependencies___version
  pluginCreator___packageJson___description
  pluginCreator___packageJson___devDependencies
  pluginCreator___packageJson___devDependencies___name
  pluginCreator___packageJson___devDependencies___version
  pluginCreator___packageJson___keywords
  pluginCreator___packageJson___license
  pluginCreator___packageJson___main
  pluginCreator___packageJson___name
  pluginCreator___packageJson___peerDependencies
  pluginCreator___packageJson___peerDependencies___name
  pluginCreator___packageJson___peerDependencies___version
  pluginCreator___packageJson___version
  pluginCreator___parent___children
  pluginCreator___parent___children___children
  pluginCreator___parent___children___id
  pluginCreator___parent___id
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___parent___parent___children
  pluginCreator___parent___parent___id
  pluginCreator___pluginFilepath
  pluginCreator___pluginOptions___apiKey
  pluginCreator___pluginOptions___background_color
  pluginCreator___pluginOptions___cacheDigest
  pluginCreator___pluginOptions___cache_busting_mode
  pluginCreator___pluginOptions___cleanupOnClient
  pluginCreator___pluginOptions___display
  pluginCreator___pluginOptions___icon
  pluginCreator___pluginOptions___include_favicon
  pluginCreator___pluginOptions___legacy
  pluginCreator___pluginOptions___name
  pluginCreator___pluginOptions___path
  pluginCreator___pluginOptions___pathCheck
  pluginCreator___pluginOptions___pathToCreateStoreModule
  pluginCreator___pluginOptions___placeIds
  pluginCreator___pluginOptions___serialize___isJSON
  pluginCreator___pluginOptions___serialize___space
  pluginCreator___pluginOptions___serialize___unsafe
  pluginCreator___pluginOptions___start_url
  pluginCreator___pluginOptions___theme_color
  pluginCreator___pluginOptions___theme_color_in_head
  pluginCreator___pluginOptions___windowKey
  pluginCreator___resolve
  pluginCreator___ssrAPIs
  pluginCreator___version
}

enum SitePluginFieldsEnum {
  browserAPIs
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  nodeAPIs
  packageJson___dependencies
  packageJson___dependencies___name
  packageJson___dependencies___version
  packageJson___description
  packageJson___devDependencies
  packageJson___devDependencies___name
  packageJson___devDependencies___version
  packageJson___keywords
  packageJson___license
  packageJson___main
  packageJson___name
  packageJson___peerDependencies
  packageJson___peerDependencies___name
  packageJson___peerDependencies___version
  packageJson___version
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pluginFilepath
  pluginOptions___apiKey
  pluginOptions___background_color
  pluginOptions___cacheDigest
  pluginOptions___cache_busting_mode
  pluginOptions___cleanupOnClient
  pluginOptions___display
  pluginOptions___icon
  pluginOptions___include_favicon
  pluginOptions___legacy
  pluginOptions___name
  pluginOptions___path
  pluginOptions___pathCheck
  pluginOptions___pathToCreateStoreModule
  pluginOptions___placeIds
  pluginOptions___serialize___isJSON
  pluginOptions___serialize___space
  pluginOptions___serialize___unsafe
  pluginOptions___start_url
  pluginOptions___theme_color
  pluginOptions___theme_color_in_head
  pluginOptions___windowKey
  resolve
  ssrAPIs
  version
}

enum SortOrderEnum {
  ASC
  DESC
}

input BooleanQueryOperatorInput {
  eq: Boolean
  in: [Boolean]
  ne: Boolean
  nin: [Boolean]
}

input DateQueryOperatorInput {
  eq: Date
  gt: Date
  gte: Date
  in: [Date]
  lt: Date
  lte: Date
  ne: Date
  nin: [Date]
}

input DirectoryFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  children: NodeFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
  highlight: String!
  opacity: Int
  shadow: String!
}

input FileFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  childImageSharp: ImageSharpFilterInput
  children: NodeFilterListInput
  childrenMenuContactJson: MenuContactJsonFilterListInput
  childrenMenuMainJson: MenuMainJsonFilterListInput
  childrenMenuSocialJson: MenuSocialJsonFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  publicURL: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
  eq: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input GooglePlacesPlaceFilterInput {
  children: NodeFilterListInput
  childrenGooglePlacesReview: GooglePlacesReviewFilterListInput
  formatted_address: StringQueryOperatorInput
  geometry: GooglePlacesPlaceGeometryFilterInput
  googlePlacesId: StringQueryOperatorInput
  icon: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  opening_hours: GooglePlacesPlaceOpening_hoursFilterInput
  parent: NodeFilterInput
  photos: GooglePlacesPlacePhotosFilterListInput
  place_id: StringQueryOperatorInput
  plus_code: GooglePlacesPlacePlus_codeFilterInput
  rating: FloatQueryOperatorInput
  types: StringQueryOperatorInput
  user_ratings_total: IntQueryOperatorInput
}

input GooglePlacesPlaceGeometryFilterInput {
  location: GooglePlacesPlaceGeometryLocationFilterInput
  viewport: GooglePlacesPlaceGeometryViewportFilterInput
}

input GooglePlacesPlaceGeometryLocationFilterInput {
  lat: FloatQueryOperatorInput
  lng: FloatQueryOperatorInput
}

input GooglePlacesPlaceGeometryViewportFilterInput {
  northeast: GooglePlacesPlaceGeometryViewportNortheastFilterInput
  southwest: GooglePlacesPlaceGeometryViewportSouthwestFilterInput
}

input GooglePlacesPlaceGeometryViewportNortheastFilterInput {
  lat: FloatQueryOperatorInput
  lng: FloatQueryOperatorInput
}

input GooglePlacesPlaceGeometryViewportSouthwestFilterInput {
  lat: FloatQueryOperatorInput
  lng: FloatQueryOperatorInput
}

input GooglePlacesPlaceOpening_hoursFilterInput {
  open_now: BooleanQueryOperatorInput
  periods: GooglePlacesPlaceOpening_hoursPeriodsFilterListInput
  weekday_text: StringQueryOperatorInput
}

input GooglePlacesPlaceOpening_hoursPeriodsCloseFilterInput {
  day: IntQueryOperatorInput
  time: DateQueryOperatorInput
}

input GooglePlacesPlaceOpening_hoursPeriodsFilterInput {
  close: GooglePlacesPlaceOpening_hoursPeriodsCloseFilterInput
  open: GooglePlacesPlaceOpening_hoursPeriodsOpenFilterInput
}

input GooglePlacesPlaceOpening_hoursPeriodsFilterListInput {
  elemMatch: GooglePlacesPlaceOpening_hoursPeriodsFilterInput
}

input GooglePlacesPlaceOpening_hoursPeriodsOpenFilterInput {
  day: IntQueryOperatorInput
  time: DateQueryOperatorInput
}

input GooglePlacesPlacePhotosFilterInput {
  height: IntQueryOperatorInput
  html_attributions: StringQueryOperatorInput
  photo_reference: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

input GooglePlacesPlacePhotosFilterListInput {
  elemMatch: GooglePlacesPlacePhotosFilterInput
}

input GooglePlacesPlacePlus_codeFilterInput {
  compound_code: StringQueryOperatorInput
  global_code: StringQueryOperatorInput
}

input GooglePlacesPlaceSortInput {
  fields: [GooglePlacesPlaceFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input GooglePlacesReviewFilterInput {
  author_name: StringQueryOperatorInput
  author_url: StringQueryOperatorInput
  children: NodeFilterListInput
  googlePlacesId: IntQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  language: StringQueryOperatorInput
  parent: NodeFilterInput
  profile_photo_url: StringQueryOperatorInput
  rating: IntQueryOperatorInput
  relative_time_description: StringQueryOperatorInput
  text: StringQueryOperatorInput
  time: IntQueryOperatorInput
}

input GooglePlacesReviewFilterListInput {
  elemMatch: GooglePlacesReviewFilterInput
}

input GooglePlacesReviewSortInput {
  fields: [GooglePlacesReviewFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input ImageSharpFilterInput {
  children: NodeFilterListInput
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  original: ImageSharpOriginalFilterInput
  parent: NodeFilterInput
  resize: ImageSharpResizeFilterInput
  resolutions: ImageSharpResolutionsFilterInput
  sizes: ImageSharpSizesFilterInput
}

input ImageSharpFixedFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  sizes: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
  aspectRatio: FloatQueryOperatorInput
  height: IntQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

input ImageSharpResolutionsFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpSizesFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  sizes: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
  eq: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  ne: Int
  nin: [Int]
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input MenuContactJsonFilterInput {
  children: NodeFilterListInput
  cta: StringQueryOperatorInput
  graphic: StringQueryOperatorInput
  href: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  title: StringQueryOperatorInput
}

input MenuContactJsonFilterListInput {
  elemMatch: MenuContactJsonFilterInput
}

input MenuContactJsonSortInput {
  fields: [MenuContactJsonFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input MenuMainJsonFilterInput {
  children: NodeFilterListInput
  cta: StringQueryOperatorInput
  href: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  title: StringQueryOperatorInput
}

input MenuMainJsonFilterListInput {
  elemMatch: MenuMainJsonFilterInput
}

input MenuMainJsonSortInput {
  fields: [MenuMainJsonFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input MenuSocialJsonFilterInput {
  children: NodeFilterListInput
  graphic: StringQueryOperatorInput
  href: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  title: StringQueryOperatorInput
}

input MenuSocialJsonFilterListInput {
  elemMatch: MenuSocialJsonFilterInput
}

input MenuSocialJsonSortInput {
  fields: [MenuSocialJsonFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input NodeFilterInput {
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input Potrace {
  alphaMax: Float
  background: String
  blackOnWhite: Boolean
  color: String
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  turdSize: Float
  turnPolicy: PotraceTurnPolicy
}

input SiteBuildMetadataFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  host: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  pathPrefix: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  port: IntQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
}

input SitePageFilterInput {
  children: NodeFilterListInput
  component: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  componentPath: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  internalComponentName: StringQueryOperatorInput
  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
  matchPath: StringQueryOperatorInput
  parent: NodeFilterInput
  path: StringQueryOperatorInput
  pluginCreator: SitePluginFilterInput
  pluginCreatorId: StringQueryOperatorInput
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
  browserAPIs: StringQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  nodeAPIs: StringQueryOperatorInput
  packageJson: SitePluginPackageJsonFilterInput
  parent: NodeFilterInput
  pluginFilepath: StringQueryOperatorInput
  pluginOptions: SitePluginPluginOptionsFilterInput
  resolve: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

input SitePluginPackageJsonDevDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonFilterInput {
  dependencies: SitePluginPackageJsonDependenciesFilterListInput
  description: StringQueryOperatorInput
  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
  keywords: StringQueryOperatorInput
  license: StringQueryOperatorInput
  main: StringQueryOperatorInput
  name: StringQueryOperatorInput
  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

input SitePluginPluginOptionsFilterInput {
  apiKey: StringQueryOperatorInput
  background_color: StringQueryOperatorInput
  cacheDigest: StringQueryOperatorInput
  cache_busting_mode: StringQueryOperatorInput
  cleanupOnClient: BooleanQueryOperatorInput
  display: StringQueryOperatorInput
  icon: StringQueryOperatorInput
  include_favicon: BooleanQueryOperatorInput
  legacy: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  path: StringQueryOperatorInput
  pathCheck: BooleanQueryOperatorInput
  pathToCreateStoreModule: StringQueryOperatorInput
  placeIds: StringQueryOperatorInput
  serialize: SitePluginPluginOptionsSerializeFilterInput
  start_url: StringQueryOperatorInput
  theme_color: StringQueryOperatorInput
  theme_color_in_head: BooleanQueryOperatorInput
  windowKey: StringQueryOperatorInput
}

input SitePluginPluginOptionsSerializeFilterInput {
  isJSON: BooleanQueryOperatorInput
  space: IntQueryOperatorInput
  unsafe: BooleanQueryOperatorInput
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
  author: StringQueryOperatorInput
  description: StringQueryOperatorInput
  title: StringQueryOperatorInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
  eq: String
  glob: String
  in: [String]
  ne: String
  nin: [String]
  regex: String
}

"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON
